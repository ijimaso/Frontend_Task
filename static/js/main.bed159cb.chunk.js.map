{"version":3,"sources":["NavBgi.js","Todo.js","Todolist.js","Undone.js","Done.js","CreateForm.js","App.js","serviceWorker.js","index.js"],"names":["NavBgi","changeBgi","event","preventDefault","clickedId","target","id","imageDic","name","url","document","body","style","backgroundImage","concat","_this2","this","react_default","a","createElement","List_default","className","ListItem_default","button","onClick","Component","Todo","props","content","done","switchDone","deleteTodo","todoIdName","todoSwitchTooltip","Card_default","CardContent_default","Tooltip_default","title","Fab_default","color","aria-label","size","Clear_default","Done_default","Delete_default","Todolist","mappingTodo","_this$props","_this","todos","map","todo","src_Todo","Object","assign","key","maxHeight","overflow","Undone","undoneTodos","undoneLength","createOpen","Add_default","Todolist_Todolist","Done","doneTodos","doneLength","CreateForm","createShow","createClose","createTodo","Dialog_default","open","onClose","TextField_default","multiline","rows","placeholder","margin","Button_default","variant","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","plusFirstUndoneTodo","getElementById","value","alert","state","slice","unshift","length","plusMaxUndoneIdTodo","undoneIds","undoneTodo","maxUndoneId","Math","max","apply","toConsumableArray","plusMaxDoneIdTodo","doneIds","doneTodo","maxDoneId","clickedTodo","clickedIndex","findIndex","setTodo","leftUndoneTodos","filter","leftDoneTodos","_this$state","NavBgi_NavBgi","Grid_default","container","item","md","xs","src_Undone","src_Done","src_CreateForm","Boolean","window","location","hostname","match","root","ReactDOM","render","App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bed159cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport \"./css/NavBgi.css\";\r\n\r\nexport default class NavBgi extends Component {\r\n    \r\n    /**\r\n    *クリックしたら背景画像が切り替わる\r\n    *\r\n    * @memberof App\r\n    * @param {Object} event イベント\r\n    */\r\n    changeBgi = (event) => {\r\n        event.preventDefault();\r\n\r\n        const clickedId = event.target.id;\r\n        const imageDic =\r\n            [{ name: \"default\", url: \"http://imgcc.naver.jp/kaze/mission/USER/20131024/30/385770/190/1920x1080xa215189de5ef3506289c6c.jpg\" },\r\n            { name: \"valley\", url: \"http://imgcc.naver.jp/kaze/mission/USER/20131023/30/385770/17/1920x1080x70ce8461c60a8e85c08186.jpg\" },\r\n            { name: \"cave\", url: \"http://imgcc.naver.jp/kaze/mission/USER/20131024/30/385770/166/1920x1080x35ad5a010053257c9fca1c.jpg\" },\r\n            { name: \"night\", url: \"http://imgcc.naver.jp/kaze/mission/USER/20131024/30/385770/129/1920x1080xb207116b68e633b49d5098.jpg\" }\r\n            ];\r\n\r\n        if (clickedId === \"default\") {\r\n            document.body.style.backgroundImage = `url(${imageDic[0].url})`;\r\n        } else if (clickedId === \"valley\") {\r\n            document.body.style.backgroundImage = `url(${imageDic[1].url})`;\r\n        } else if (clickedId === \"cave\") {\r\n            document.body.style.backgroundImage = `url(${imageDic[2].url})`;\r\n        } else if (clickedId === \"night\") {\r\n            document.body.style.backgroundImage = `url(${imageDic[3].url})`;\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <List className=\"navbgi\">\r\n                <ListItem button onClick={(event) => { this.changeBgi(event) }} id=\"default\">\r\n                    Default\r\n                </ListItem>\r\n                <ListItem button onClick={(event) => { this.changeBgi(event) }} id=\"valley\">\r\n                    Valley\r\n                </ListItem>\r\n                <ListItem button onClick={(event) => { this.changeBgi(event) }} id=\"cave\">\r\n                    Cave\r\n                </ListItem>\r\n                <ListItem button onClick={(event) => { this.changeBgi(event) }} id=\"night\">\r\n                    Night\r\n                </ListItem>\r\n            </List>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Done from \"@material-ui/icons/Done\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"./css/Todo.css\";\r\n\r\nconst Todo = (props) => {\r\n    const {content,done,switchDone,deleteTodo} = props;\r\n    const todoIdName = done ? \"done\" : \"undone\";\r\n    const todoSwitchTooltip = done ? \"元に戻す\" : \"完了\";\r\n    return (\r\n        <div className=\"todo\">\r\n            <Card>\r\n                <CardContent>\r\n                    <p id={todoIdName}>{content}</p>\r\n                    {done ?\r\n                        <Tooltip title={todoSwitchTooltip}>\r\n                            <Fab color=\"secondary\" aria-label=\"Clear\" size=\"small\" id=\"icons\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    switchDone(props);\r\n                                }}>\r\n                                <Clear />\r\n                            </Fab>\r\n                        </Tooltip> :\r\n                        <Tooltip title={todoSwitchTooltip}>\r\n                            <Fab color=\"secondary\" aria-label=\"Check\" size=\"small\" id=\"icons\"\r\n                                onClick={(event) => {\r\n                                    event.preventDefault();\r\n                                    switchDone(props);\r\n                                }}>\r\n                                <Done />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    }\r\n                    <Tooltip title=\"削除\">\r\n                        <Fab aria-label=\"Delete\" size=\"small\"\r\n                            onClick={(event) => {\r\n                                event.preventDefault();\r\n                                deleteTodo(props);\r\n                            }}>\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { Component } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Todo from \"./Todo\";\r\nimport \"./css/Todolist.css\";\r\n\r\nexport default class Todolist extends Component {\r\n    mappingTodo = () => {\r\n        const {todos,switchDone,deleteTodo} = this.props\r\n        const mappedtodos = todos.map(todo => {\r\n            return (\r\n                <Todo\r\n                key={todo.id} {...todo}\r\n                switchDone={switchDone}\r\n                deleteTodo={deleteTodo} />\r\n            );\r\n        });\r\n        return mappedtodos;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todolist\">\r\n                <List style={{ maxHeight: 380, overflow: \"auto\" }}>\r\n                    {this.mappingTodo()}\r\n                </List>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Todolist from \"./Todolist\";\r\nimport \"./css/Undone.css\";\r\n\r\nconst Undone = (props) => {\r\n  const {undoneTodos,undoneLength,switchDone,deleteTodo,createOpen} = props\r\n  return (\r\n    <div className=\"undone\">\r\n      <Card>\r\n        <div id=\"undonetitle\">\r\n          <h1>未完了: {undoneLength}</h1>\r\n          <Tooltip title=\"新規作成\">\r\n            <Fab\r\n              color=\"primary\"\r\n              aria-label=\"Add\"\r\n              size=\"small\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                createOpen();\r\n              }}\r\n              id=\"addicon\"\r\n            >\r\n              <AddIcon />\r\n            </Fab>\r\n          </Tooltip>\r\n        </div>\r\n        <Todolist\r\n          todos={undoneTodos}\r\n          switchDone={switchDone}\r\n          deleteTodo={deleteTodo}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Undone;\r\n","import React from 'react';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Todolist from \"./Todolist\";\r\nimport \"./css/Done.css\";\r\n\r\nconst Done = (props) => {\r\n    const {doneTodos,doneLength,switchDone,deleteTodo} = props\r\n    return (\r\n        <div className=\"done\">\r\n            <Card>\r\n                <h1>完了: {doneLength}</h1>\r\n                <Todolist\r\n                    todos={doneTodos}\r\n                    switchDone={switchDone}\r\n                    deleteTodo={deleteTodo}\r\n                />\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Done;\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst CreateForm = (props) => {\r\n  const {createShow,createClose,createTodo} = props\r\n    return (\r\n      <div>\r\n        <Dialog open={createShow} onClose={createClose}>\r\n          <h1>作成するタスクを入力してください．</h1>\r\n          <TextField\r\n            multiline\r\n            rows=\"3\"\r\n            placeholder=\"タスク内容\"\r\n            margin=\"dense\"\r\n            id=\"content\"\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              createTodo(event);\r\n            }}\r\n          >\r\n          OK!!\r\n          </Button>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CreateForm;\r\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport NavBgi from \"./NavBgi\";\nimport Undone from \"./Undone\";\nimport Done from \"./Done\";\nimport CreateForm from \"./CreateForm\";\nimport \"./css/App.css\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    const undoneTodos = [];\n    const doneTodos = [];\n    const undoneLength = undoneTodos.length;\n    const doneLength = doneTodos.length;\n\n    this.state = {\n      undoneTodos: undoneTodos,\n      undoneLength: undoneLength,\n      doneTodos: doneTodos,\n      doneLength: doneLength,\n      createShow: false\n    };\n  }\n\n  /**\n   *タスク作成フォームを開く\n   *\n   * @memberof App\n   */\n  createOpen = () => {\n    this.setState({ createShow: true });\n  }\n\n  /**\n   *タスク表示フォームを閉じる\n   *\n   * @memberof App\n   */\n  createClose = () => {\n    this.setState({ createShow: false });\n  }\n\n  /**\n   *Idが1のタスクを作成する\n   *\n   * @memberof App\n   */\n  plusFirstUndoneTodo = () => {\n    const content = document.getElementById(\"content\").value;\n    if (content === \"\") {\n      alert(\"タスク内容を入力してください．\");\n    } else {\n      const undoneTodos = this.state.undoneTodos.slice();\n\n      undoneTodos.unshift({\n        id: 1,\n        content: content,\n        done: false\n      });\n      const undoneLength = undoneTodos.length;\n\n      this.setState({ undoneTodos: undoneTodos });\n      this.setState({ undoneLength: undoneLength });\n      this.createClose();\n    }\n  }\n\n  /**\n   *IDの最大値が「未完了」のタスクであるとき，次のIDのタスクを作成する\n   *\n   * @memberof App\n   */\n  plusMaxUndoneIdTodo = () => {\n    const content = document.getElementById(\"content\").value;\n    if (content === \"\") {\n      alert(\"タスク内容を入力してください．\");\n    } else {\n      const undoneTodos = this.state.undoneTodos.slice();\n      const undoneIds = undoneTodos.map(undoneTodo => undoneTodo.id);\n      const maxUndoneId = Math.max(...undoneIds);\n\n      undoneTodos.unshift({\n        id: maxUndoneId + 1,\n        content: content,\n        done: false\n      });\n      const undoneLength = undoneTodos.length;\n\n      this.setState({ undoneTodos: undoneTodos });\n      this.setState({ undoneLength: undoneLength });\n      this.createClose();\n    }\n  }\n\n  /**\n   *IDの最大値が「完了」のタスクであるとき，次のIDのタスクを作成する\n   *\n   * @memberof App\n   */\n  plusMaxDoneIdTodo = () => {\n    const content = document.getElementById(\"content\").value;\n    if (content === \"\") {\n      alert(\"タスク内容を入力してください．\");\n    } else {\n    const undoneTodos = this.state.undoneTodos.slice();\n    const doneTodos = this.state.doneTodos.slice();\n    const doneIds = doneTodos.map(doneTodo => doneTodo.id);\n    const maxDoneId = Math.max(...doneIds);\n\n    undoneTodos.unshift({\n      id: maxDoneId + 1,\n      content: content,\n      done: false\n    });\n    const undoneLength = undoneTodos.length;\n\n    this.setState({ undoneTodos: undoneTodos });\n    this.setState({ undoneLength: undoneLength });\n    this.createClose();\n    }\n  }\n\n  /**\n   *未完了/完了のタスクの条件によって，実際にタスクを作成\n   *\n   * @memberof App\n   * @param {Object} event イベント\n   */\n  createTodo = (event) => {\n    event.preventDefault();\n\n    const undoneTodos = this.state.undoneTodos.slice();\n    const undoneLength = undoneTodos.length;\n    const undoneIds = undoneTodos.map(undoneTodo => undoneTodo.id);\n    const maxUndoneId = Math.max(...undoneIds);\n\n    const doneTodos = this.state.doneTodos.slice();\n    const doneLength = doneTodos.length;\n    const doneIds = doneTodos.map(doneTodo => doneTodo.id);\n    const maxDoneId = Math.max(...doneIds);\n\n    if ((undoneLength !== 0 && doneLength !== 0) && (maxUndoneId > maxDoneId)) {\n      this.plusMaxUndoneIdTodo();\n    } else if ((undoneLength !== 0 && doneLength !== 0) && (maxUndoneId < maxDoneId)) {\n      this.plusMaxDoneIdTodo();\n    } else if (doneLength === 0 && undoneLength === 0) {\n      this.plusFirstUndoneTodo();\n    } else if (doneLength === 0) {\n      this.plusMaxUndoneIdTodo();\n    } else if (undoneLength === 0) {\n      this.plusMaxDoneIdTodo();\n    }\n  }\n\n  /**\n   *完了/未完了を切り替える\n   *\n   * @memberof App\n   * @param {Object} clickedTodo クリックされたタスク\n   */\n  switchDone = (clickedTodo) => {\n    const undoneTodos = this.state.undoneTodos.slice();\n    const doneTodos = this.state.doneTodos.slice();\n\n    if (clickedTodo.done === false) {\n      const clickedIndex = undoneTodos.findIndex((undoneTodo) => {\n        return clickedTodo.id === undoneTodo.id;\n      });\n\n      const setTodo = undoneTodos[clickedIndex];\n      setTodo.done = !(setTodo.done);\n\n      doneTodos.unshift(setTodo);\n      const doneLength = doneTodos.length;\n\n      const leftUndoneTodos = undoneTodos.filter((undoneTodo) => {\n        return clickedTodo.id !== undoneTodo.id;\n      });\n      const undoneLength = leftUndoneTodos.length;\n\n      this.setState({ undoneTodos: leftUndoneTodos });\n      this.setState({ undoneLength: undoneLength });\n      this.setState({ doneTodos: doneTodos });\n      this.setState({ doneLength: doneLength });\n    } else {\n      const clickedIndex = doneTodos.findIndex((doneTodo) => {\n        return clickedTodo.id === doneTodo.id;\n      });\n\n      const setTodo = doneTodos[clickedIndex];\n      setTodo.done = !(setTodo.done);\n\n      undoneTodos.unshift(setTodo);\n      const undoneLength = undoneTodos.length;\n\n      const leftDoneTodos = doneTodos.filter((doneTodo) => {\n        return clickedTodo.id !== doneTodo.id;\n      });\n      const doneLength = leftDoneTodos.length;\n\n      this.setState({ undoneTodos: undoneTodos });\n      this.setState({ undoneLength: undoneLength });\n      this.setState({ doneTodos: leftDoneTodos });\n      this.setState({ doneLength: doneLength });\n    }\n  }\n\n  /**\n   *タスクを削除する\n   *\n   * @memberof App\n   * @param {Object} clickedTodo クリックされたタスク\n   */\n  deleteTodo = (clickedTodo) => {\n    const undoneTodos = this.state.undoneTodos.slice();\n    const doneTodos = this.state.doneTodos.slice();\n\n    if (clickedTodo.done === false) {\n      const leftUndoneTodos = undoneTodos.filter((undoneTodo) => {\n        return clickedTodo.id !== undoneTodo.id;\n      })\n      const undoneLength = leftUndoneTodos.length;\n\n      this.setState({ undoneTodos: leftUndoneTodos });\n      this.setState({ undoneLength: undoneLength });\n    } else {\n      const leftDoneTodos = doneTodos.filter((doneTodo) => {\n        return clickedTodo.id !== doneTodo.id;\n      })\n      const doneLength = leftDoneTodos.length;\n\n      this.setState({ doneTodos: leftDoneTodos });\n      this.setState({ doneLength: doneLength });\n    }\n  }\n\n  render() {\n    const {\n      undoneTodos,\n      undoneLength,\n      doneTodos,\n      doneLength,\n      createShow\n    } = this.state\n    return (\n      <div className=\"App\">\n        <NavBgi />\n        <Grid container>\n          <Grid item md={6} xs={12}>\n            <Undone\n              undoneTodos={undoneTodos}\n              undoneLength={undoneLength}\n              createOpen={this.createOpen}\n              switchDone={this.switchDone}\n              deleteTodo={this.deleteTodo}\n            />\n          </Grid>\n          <Grid item md={6} xs={12}>\n            <Done\n              doneTodos={doneTodos}\n              doneLength={doneLength}\n              switchDone={this.switchDone}\n              deleteTodo={this.deleteTodo}\n            />\n          </Grid>\n        </Grid>\n        <CreateForm\n          createShow={createShow}\n          createOpen={this.createOpen}\n          createClose={this.createClose}\n          createTodo={this.createTodo}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById(\"root\");\nReactDOM.render(<App />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}